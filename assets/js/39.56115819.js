(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{487:function(t,e,o){var n=o(3),s=o(6),c=o(106),a=[].slice,i=function(t){return function(e,o){var n=arguments.length>2,s=n?a.call(arguments,2):void 0;return t(n?function(){("function"==typeof e?e:Function(e)).apply(this,s)}:e,o)}};n({global:!0,bind:!0,forced:/MSIE .\./.test(c)},{setTimeout:i(s.setTimeout),setInterval:i(s.setInterval)})},593:function(t,e,o){"use strict";o.r(e);o(487);var n={methods:{open:function(){var t=this;this.$alert("这是一段内容","标题名称",{confirmButtonText:"确定",callback:function(e){t.$message({type:"info",message:"action: ".concat(e)})}})},open2:function(){var t=this;this.$confirm("此操作将永久删除该文件, 是否继续?","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then((function(){setTimeout((function(){t.$message({message:"删除成功!",type:"success"})}),200)})).catch((function(){setTimeout((function(){t.$message({message:"已取消删除",type:"info"})}),200)}))},open3:function(){var t=this;this.$prompt("请输入邮箱","提示",{confirmButtonText:"确定",cancelButtonText:"取消",inputPattern:/[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/,inputErrorMessage:"邮箱格式不正确"}).then((function(e){var o=e.value;setTimeout((function(){t.$message({type:"success",message:"你的邮箱是: "+o})}),200)})).catch((function(){setTimeout((function(){t.$message({type:"info",message:"取消输入"})}),200)}))},open4:function(){var t=this,e=this.$createElement;this.$msgbox({title:"消息",message:e("p",null,[e("span",null,"内容可以是 "),e("i",{style:"color: teal"},"VNode")]),showCancelButton:!0,confirmButtonText:"确定",cancelButtonText:"取消",beforeClose:function(t,e,o){"confirm"===t?(e.confirmButtonLoading=!0,e.confirmButtonText="执行中...",setTimeout((function(){o(),setTimeout((function(){e.confirmButtonLoading=!1}),300)}),3e3)):o()}}).then((function(e){setTimeout((function(){t.$message({type:"info",message:"action: "+e})}),200)}))},open5:function(){this.$alert("<strong>这是 <i>HTML</i> 片段</strong>","HTML 片段",{dangerouslyUseHTMLString:!0})},open6:function(){var t=this;this.$confirm("此操作将永久删除该文件, 是否继续?","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning",center:!0}).then((function(){t.$message({type:"success",message:"删除成功!"})})).catch((function(){t.$message({type:"info",message:"已取消删除"})}))}}},s=o(2),c=Object(s.a)(n,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"messagebox-弹框"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#messagebox-弹框"}},[t._v("#")]),t._v(" MessageBox 弹框")]),t._v(" "),o("p",[t._v("模拟系统的消息提示框而实现的一套模态对话框组件，用于消息提示、确认消息和提交内容。")]),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),o("p",[t._v("从场景上说，MessageBox 的作用是美化系统自带的 "),o("code",[t._v("alert")]),t._v("、"),o("code",[t._v("confirm")]),t._v(" 和 "),o("code",[t._v("prompt")]),t._v("，因此适合展示较为简单的内容。如果需要弹出较为复杂的内容，请使用 Dialog。")])]),t._v(" "),o("h3",{attrs:{id:"消息提示"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#消息提示"}},[t._v("#")]),t._v(" 消息提示")]),t._v(" "),o("p",[t._v("当用户进行操作时会被触发，该对话框中断用户操作，直到用户确认知晓后才可关闭。")]),t._v(" "),o("p",[t._v(":::demo 调用"),o("code",[t._v("$alert")]),t._v("方法即可打开消息提示，它模拟了系统的 "),o("code",[t._v("alert")]),t._v("，无法通过按下 ESC 或点击框外关闭。此例中接收了两个参数，"),o("code",[t._v("message")]),t._v("和"),o("code",[t._v("title")]),t._v("。值得一提的是，窗口被关闭后，它默认会返回一个"),o("code",[t._v("Promise")]),t._v("对象便于进行后续操作的处理。若不确定浏览器是否支持"),o("code",[t._v("Promise")]),t._v("，可自行引入第三方 polyfill 或像本例一样使用回调进行后续处理。")]),t._v(" "),o("el-card",{attrs:{shadow:"hover"}},[o("el-button",{attrs:{type:"text"},on:{click:t.open}},[t._v("点击打开 Message Box")])],1),t._v(" "),o("h3",{attrs:{id:"确认消息"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#确认消息"}},[t._v("#")]),t._v(" 确认消息")]),t._v(" "),o("p",[t._v("提示用户确认其已经触发的动作，并询问是否进行此操作时会用到此对话框。")]),t._v(" "),o("p",[t._v("调用"),o("code",[t._v("$confirm")]),t._v("方法即可打开消息提示，它模拟了系统的 "),o("code",[t._v("confirm")]),t._v("。Message Box 组件也拥有极高的定制性，我们可以传入"),o("code",[t._v("options")]),t._v("作为第三个参数，它是一个字面量对象。"),o("code",[t._v("type")]),t._v("字段表明消息类型，可以为"),o("code",[t._v("success")]),t._v("，"),o("code",[t._v("error")]),t._v("，"),o("code",[t._v("info")]),t._v("和"),o("code",[t._v("warning")]),t._v("，无效的设置将会被忽略。注意，第二个参数"),o("code",[t._v("title")]),t._v("必须定义为"),o("code",[t._v("String")]),t._v("类型，如果是"),o("code",[t._v("Object")]),t._v("，会被理解为"),o("code",[t._v("options")]),t._v("。在这里我们用了 Promise 来处理后续响应。")]),t._v(" "),o("el-card",{attrs:{shadow:"hover"}},[o("el-button",{attrs:{type:"text"},on:{click:t.open2}},[t._v("点击打开 Message Box")])],1),t._v(" "),o("h3",{attrs:{id:"提交内容"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#提交内容"}},[t._v("#")]),t._v(" 提交内容")]),t._v(" "),o("p",[t._v("当用户进行操作时会被触发，中断用户操作，提示用户进行输入的对话框。")]),t._v(" "),o("p",[t._v(":::demo 调用"),o("code",[t._v("$prompt")]),t._v("方法即可打开消息提示，它模拟了系统的 "),o("code",[t._v("prompt")]),t._v("。可以用"),o("code",[t._v("inputPattern")]),t._v("字段自己规定匹配模式，或者用"),o("code",[t._v("inputValidator")]),t._v("规定校验函数，可以返回"),o("code",[t._v("Boolean")]),t._v("或"),o("code",[t._v("String")]),t._v("，返回"),o("code",[t._v("false")]),t._v("或字符串时均表示校验未通过，同时返回的字符串相当于定义了"),o("code",[t._v("inputErrorMessage")]),t._v("字段。此外，可以用"),o("code",[t._v("inputPlaceholder")]),t._v("字段来定义输入框的占位符。")]),t._v(" "),o("el-card",{attrs:{shadow:"hover"}},[o("el-button",{attrs:{type:"text"},on:{click:t.open3}},[t._v("点击打开 Message Box")])],1),t._v(" "),o("h3",{attrs:{id:"居中布局"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#居中布局"}},[t._v("#")]),t._v(" 居中布局")]),t._v(" "),o("p",[t._v("将 "),o("code",[t._v("center")]),t._v(" 设置为 "),o("code",[t._v("true")]),t._v(" 即可开启居中布局")]),t._v(" "),o("el-card",{attrs:{shadow:"hover"}},[o("el-button",{attrs:{type:"text"},on:{click:t.open6}},[t._v("点击打开 Message Box")])],1)],1)}),[],!1,null,null,null);e.default=c.exports}}]);